TYPE : int
ID : func
LEFT_ROUND : (
TYPE : int
ID : a
COMMA : ,
TYPE : char*
ID : s
RIGHT_ROUND : )
LEFT_CURLY : {
TYPE : char*
ID : c
ASSIGNMENT : =
ID : s
SEMICOLON : ;
TYPE : int
ID : b
ASSIGNMENT : =
ID : a
SEMICOLON : ;
RETURN : return
ID : b
SEMICOLON : ;
RIGHT_CURLY : }
TYPE : int
ID : main
LEFT_ROUND : (
RIGHT_ROUND : )
LEFT_CURLY : {
WHILE : while
LEFT_ROUND : (
ID : a
LESS_THAN : <
ID : b
RIGHT_ROUND : )
LEFT_CURLY : {
ID : i
ASSIGNMENT : =
ID : i
ADD : +
NUM : 1
SEMICOLON : ;
RIGHT_CURLY : }
TYPE : char*
ID : s
ASSIGNMENT : =
TYPE : string
SEMICOLON : ;
ID : func
LEFT_ROUND : (
ID : a
COMMA : ,
ID : s
RIGHT_ROUND : )
SEMICOLON : ;
RETURN : return
NUM : 0
SEMICOLON : ;
RIGHT_CURLY : }
